{"remainingRequest":"/Users/arina/Documents/x-project/node_modules/babel-loader/lib/index.js!/Users/arina/Documents/x-project/src/store/modules/post.js","dependencies":[{"path":"/Users/arina/Documents/x-project/src/store/modules/post.js","mtime":1628543954929},{"path":"/Users/arina/Documents/x-project/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arina/Documents/x-project/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9hcmluYS9Eb2N1bWVudHMveC1wcm9qZWN0L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKZXhwb3J0IGRlZmF1bHQgewogIGFjdGlvbnM6IHsKICAgIGZldGNoUG9zdHM6IGZ1bmN0aW9uIGZldGNoUG9zdHMoX3JlZikgewogICAgICB2YXIgX2FyZ3VtZW50cyA9IGFyZ3VtZW50czsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY29tbWl0LCBsaW1pdCwgcmVzLCBwb3N0czsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICAgIGxpbWl0ID0gX2FyZ3VtZW50cy5sZW5ndGggPiAxICYmIF9hcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IF9hcmd1bWVudHNbMV0gOiAzOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goImh0dHBzOi8vanNvbnBsYWNlaG9sZGVyLnR5cGljb2RlLmNvbS9wb3N0cz9fbGltaXQ9IiArIGxpbWl0KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA3OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIHBvc3RzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGNvbW1pdCgidXBkYXRlUG9zdHMiLCBwb3N0cyk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgdXBkYXRlUG9zdHM6IGZ1bmN0aW9uIHVwZGF0ZVBvc3RzKHN0YXRlLCBwb3N0cykgewogICAgICBzdGF0ZS5wb3N0cyA9IHBvc3RzOwogICAgfSwKICAgIGNyZWF0ZVBvc3Q6IGZ1bmN0aW9uIGNyZWF0ZVBvc3Qoc3RhdGUsIG5ld1Bvc3QpIHsKICAgICAgc3RhdGUucG9zdHMudW5zaGlmdChuZXdQb3N0KTsKICAgIH0KICB9LAogIHN0YXRlOiB7CiAgICBwb3N0czogW10KICB9LAogIGdldHRlcnM6IHsKICAgIHZhbGlkUG9zdHM6IGZ1bmN0aW9uIHZhbGlkUG9zdHMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnBvc3RzLmZpbHRlcihmdW5jdGlvbiAocCkgewogICAgICAgIHJldHVybiBwLnRpdGxlICYmIHAuYm9keTsKICAgICAgfSk7CiAgICB9LAogICAgYWxsUG9zdHM6IGZ1bmN0aW9uIGFsbFBvc3RzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5wb3N0czsKICAgIH0sCiAgICBwb3N0c0NvdW50OiBmdW5jdGlvbiBwb3N0c0NvdW50KHN0YXRlLCBnZXR0ZXJzKSB7CiAgICAgIHJldHVybiBnZXR0ZXJzLnZhbGlkUG9zdHMubGVuZ3RoOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/arina/Documents/x-project/src/store/modules/post.js"],"names":["actions","fetchPosts","commit","limit","fetch","res","json","posts","mutations","updatePosts","state","createPost","newPost","unshift","getters","validPosts","filter","p","title","body","allPosts","postsCount","length"],"mappings":";;;;AAAA,eAAe;AACbA,EAAAA,OAAO,EAAE;AACDC,IAAAA,UADC,4BACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArBC,gBAAAA,MAAqB,QAArBA,MAAqB;AAAXC,gBAAAA,KAAW,0EAAH,CAAG;AAAA;AAAA,uBACpBC,KAAK,CACrB,uDAAuDD,KADlC,CADe;;AAAA;AAChCE,gBAAAA,GADgC;AAAA;AAAA,uBAIlBA,GAAG,CAACC,IAAJ,EAJkB;;AAAA;AAIhCC,gBAAAA,KAJgC;AAKtCL,gBAAAA,MAAM,CAAC,aAAD,EAAgBK,KAAhB,CAAN;;AALsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMvC;AAPM,GADI;AAUbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WADS,uBACGC,KADH,EACUH,KADV,EACiB;AACxBG,MAAAA,KAAK,CAACH,KAAN,GAAcA,KAAd;AACD,KAHQ;AAITI,IAAAA,UAJS,sBAIED,KAJF,EAISE,OAJT,EAIkB;AACzBF,MAAAA,KAAK,CAACH,KAAN,CAAYM,OAAZ,CAAoBD,OAApB;AACD;AANQ,GAVE;AAkBbF,EAAAA,KAAK,EAAE;AACLH,IAAAA,KAAK,EAAE;AADF,GAlBM;AAqBbO,EAAAA,OAAO,EAAE;AACPC,IAAAA,UADO,sBACIL,KADJ,EACW;AAChB,aAAOA,KAAK,CAACH,KAAN,CAAYS,MAAZ,CAAmB,UAACC,CAAD,EAAO;AAC/B,eAAOA,CAAC,CAACC,KAAF,IAAWD,CAAC,CAACE,IAApB;AACD,OAFM,CAAP;AAGD,KALM;AAMPC,IAAAA,QANO,oBAMEV,KANF,EAMS;AACd,aAAOA,KAAK,CAACH,KAAb;AACD,KARM;AASPc,IAAAA,UATO,sBASIX,KATJ,EASWI,OATX,EASoB;AACzB,aAAOA,OAAO,CAACC,UAAR,CAAmBO,MAA1B;AACD;AAXM;AArBI,CAAf","sourcesContent":["export default {\n  actions: {\n    async fetchPosts({ commit }, limit = 3) {\n      const res = await fetch(\n        \"https://jsonplaceholder.typicode.com/posts?_limit=\" + limit\n      );\n      const posts = await res.json();\n      commit(\"updatePosts\", posts);\n    },\n  },\n  mutations: {\n    updatePosts(state, posts) {\n      state.posts = posts;\n    },\n    createPost(state, newPost) {\n      state.posts.unshift(newPost);\n    },\n  },\n  state: {\n    posts: [],\n  },\n  getters: {\n    validPosts(state) {\n      return state.posts.filter((p) => {\n        return p.title && p.body;\n      });\n    },\n    allPosts(state) {\n      return state.posts;\n    },\n    postsCount(state, getters) {\n      return getters.validPosts.length;\n    },\n  },\n};\n"]}]}